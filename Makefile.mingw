# Makefile for utripper (Mingw32)
# $Date: 2002/11/03 23:09:00 $

DEFINES = -DINLINE=inline

# If you use system-supplied regex library, uncomment this
#DEFINES += -DUSE_SYSTEM_REGEX

# If you want to compile glibc regex functions, uncomment this line
EXTRAOBJS += regex.o

# if you don't have an MMX cpu, comment this line out
DEFINES += -DHAVE_MMX

# if you don't have an SSE cpu, comment this line out
#DEFINES += -DHAVE_SSE

# see Makefile
#DEFINES += -DSMALL_CACHE

ASMDEFS = $(DEFINES)

# for Cygwin, use this option (-fomit-frame-pointer may crash)
CFLAGS = -O3 -funroll-loops -finline-functions -Wall -mno-cygwin

ASMSRC = crypt_core_mmx.S
ASMOBJ = $(ASMSRC:.S=.o)
EXTRAOBJS += $(ASMOBJ)

MAINOBJ = ut-win32.o

CC = gcc
CPP = cpp

.PHONY:	all dist clean

all: utripper

.c.o	:
	$(CC) $(CFLAGS) $(DEFINES) -c $<

.S.o	:
	$(CC) -E $(ASMDEFS) $< > tmp.s
	$(CC) $(CFLAGS) -c tmp.s -o $@
	rm tmp.s

utripper : $(MAINOBJ) utripper.o crypt_util.o $(EXTRAOBJS)
	$(CC) $(CFLAGS) -o $@ $(MAINOBJ) utripper.o crypt_util.o $(EXTRAOBJS) $(LIBS)

ut-unix.o : ut-unix.c ut.h crypt_util.h
utripper.o : utripper.c ut.h crypt_util.h
crypt_util.o : crypt_util.c crypt_util.h crypt_core32.c crypt_core64.c

regex.o : regex.c regex.h
	$(CC) $(CFLAGS) -DSTDC_HEADERS -I. -c regex.c

crypt_core_mmx.o : crypt_core_mmx.S

clean:
	rm -f *.o utripper.exe *~
